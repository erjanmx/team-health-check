{"version":3,"sources":["components/Main.js","components/Icon.js","components/ChannelHeader.js","components/Voter.js","components/Counter.js","components/App.js","serviceWorker.js","index.js","ably.js"],"names":["Main","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleFormSubmit","bind","assertThisInitialized","e","preventDefault","channelUuid","target","elements","value","trim","handleChange","role","_this2","react_default","a","createElement","className","onSubmit","type","autoFocus","min","max","name","placeholder","autoComplete","onClick","Component","Icon","config","1","color","0","-1","getColor","prefix","isSelected","concat","style","getClassName","ChannelHeader","Voter","setupChannel","channel","Ably","channels","get","attach","subscribe","msg","handleSubscribe","once","presence","enter","handleVote","state","vote","setState","publish","components_ChannelHeader","fontSize","components_Icon","_","require","Counter","getVotedMembers","members","filter","member","resetVotes","updateMembers","ind","findIndex","id","connectionId","data","prevState","map","presentMembers","_this3","find","result","length","minBy","App","random","container","components_Voter","components_Counter","components_Main","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","components_App","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker","__webpack_require__","r","__webpack_exports__","ably_browser_static_ably_commonjs_js__WEBPACK_IMPORTED_MODULE_0__","ably","Realtime","key","clientId"],"mappings":"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","file":"static/js/main.28e1c92a.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass Main extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n  }\n\n  handleFormSubmit(e) {\n    e.preventDefault();\n\n    const channelUuid = e.target.elements.channelUuid.value.trim();\n    \n    if (channelUuid) {\n      this.props.handleChange({ \n        role: 'voter', \n        channelUuid: channelUuid \n      });\n    }\n  }\n\n  render() {    \n    return (\n      <div className=\"has-text-centered\">\n        <form onSubmit={this.handleFormSubmit}>\n          <h4 className=\"title is-4\">Team health checker</h4>\n          <hr></hr>\n          <div className=\"columns\">\n            <div className=\"column\">\n              <div className=\"control\">\n                <input type=\"number\" autoFocus min=\"1000\" max=\"9999\" className=\"input\" name=\"channelUuid\" placeholder=\"Channel ID\" autoComplete=\"off\" />\n              </div>\n            </div>\n            <div className=\"column\">\n              <div className=\"control\">\n                <button className=\"button is-fullwidth is-dark\">Join</button>\n              </div>\n            </div>\n          </div>\n          <h6 className=\"title is-6\">or</h6>\n          <div className=\"field\">\n            <div className=\"control\">\n              <button onClick={(e) => this.props.handleChange({ role: 'counter' })} className=\"button is-fullwidth is-medium\">\n                Create\n              </button>\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Main;\n","import React, { Component } from \"react\";\n\nclass Icon extends Component {\n  config = {\n    '1': { className: 'fa-smile', color: 'green' },\n    '0': { className: 'fa-meh', color: '#dcdc48' },\n    '-1': { className: 'fa-frown', color: 'red' },\n  }\n\n  getColor = () => this.config[this.props.type].color;\n\n  getClassName() {\n    const name = this.config[this.props.type].className;\n    const prefix = this.props.isSelected ? 'fas' : 'far';\n\n    return `${prefix} ${name}`;\n  }\n\n  render() {\n    return (\n      <i style={{ color: this.getColor() }} className={this.getClassName()} />\n    );\n  }\n}\n\nexport default Icon;\n","import React, { Component } from \"react\";\n\nclass ChannelHeader extends Component {\n  render() {\n    return (\n        <div>\n          <p className=\"heading\">Channel ID</p>\n          <h4 className=\"title is-2 has-text-centered\">{this.props.channelUuid}</h4>\n        </div>\n    );\n  }\n}\n\nexport default ChannelHeader;\n","import React, { Component } from \"react\";\nimport Icon from './Icon';\nimport ChannelHeader from './ChannelHeader';\n\nimport Ably from './../ably';\n\nclass Voter extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleVote = this.handleVote.bind(this);\n    this.handleSubscribe = this.handleSubscribe.bind(this);\n\n    this.state = {\n      vote: null,\n    };\n  }\n\n  componentDidMount() {\n    this.setupChannel();\n  }\n\n  setupChannel = () => {\n    this.channel = Ably.channels.get(this.props.channelUuid);\n\n    this.channel.attach();\n    this.channel.subscribe((msg) => this.handleSubscribe(msg));\n    this.channel.once(\"attached\", () => this.channel.presence.enter());\n  }\n\n  handleSubscribe(msg) {\n    if (msg.name === 'reset') {\n      this.setState({ vote: null });\n    }\n  }\n\n  handleVote(vote) {\n    this.setState({ vote });\n    this.channel.publish('add_vote', { vote });\n  }\n\n  render() {\n    return (\n      <div className=\"has-text-centered\">\n        <div>\n          <ChannelHeader channelUuid={this.props.channelUuid} />\n        </div>\n        <div className=\"columns\" style={{ fontSize: '7em' }}>\n          <div className=\"column\" onClick={(e) => this.handleVote(1, e)} >\n            <Icon type={1} isSelected={this.state.vote === 1} />\n          </div>\n          <div className=\"column\" onClick={(e) => this.handleVote(0, e)} >\n            <Icon type={0} isSelected={this.state.vote === 0} />\n          </div>\n          <div className=\"column\" onClick={(e) => this.handleVote(-1, e)} >\n            <Icon type={-1} isSelected={this.state.vote === -1} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Voter;\n","import React, { Component } from \"react\";\nimport Icon from \"./Icon\";\nimport ChannelHeader from \"./ChannelHeader\";\nimport Ably from './../ably';\n\nconst _ = require('lodash');\n\nclass Counter extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      members: [],\n    };\n  }\n\n  getVotedMembers = () => this.state.members.filter(member => member.vote !== null);\n\n  componentDidMount() {\n    this.setupChannel();\n  }\n\n  setupChannel() {\n    this.channel = Ably.channels.get(this.props.channelUuid);\n\n    this.channel.attach();\n    this.channel.subscribe((msg) => this.handleSubscribe(msg));\n    this.channel.presence.subscribe(() => this.channel.presence.get((e, members) => this.updateMembers(members)));\n\n    this.resetVotes();\n  }\n\n  handleSubscribe(msg) {\n    if (msg.name === 'add_vote') {\n      const members = this.state.members;\n      const ind = _.findIndex(members, { id: msg.connectionId })\n\n      if (ind !== -1) {\n        members[ind].vote = msg.data.vote;\n        this.setState({ members });\n      }\n    } else if (msg.name === 'reset') {\n      this.setState((prevState) => ({\n        members: prevState.members.map(member => ({ id: member.id, vote: null }))\n      }));\n    }\n  }\n\n  updateMembers(presentMembers) {\n    const members = presentMembers.map(member => ({\n      id: member.connectionId,\n      // preserve previous users' votes\n      vote: _.get(_.find(this.state.members, { id: member.connectionId }), 'vote', null),\n    }));\n\n    this.setState({ members });   \n  }\n  \n  resetVotes = () => {\n    this.channel.publish('reset', {});\n  }\n\n  render() {\n    let result = '-';\n\n    // show only when every member has voted\n    if (this.state.members.length > 0 && this.state.members.length === this.getVotedMembers().length) {\n      const vote = _.minBy(this.state.members, 'vote').vote;\n      result = <Icon type={vote} />\n    }\n\n    return (\n      <section>\n        <nav className=\"level is-mobile\">\n          <div className=\"level-item has-text-centered\">\n            <ChannelHeader channelUuid={this.props.channelUuid} />\n          </div>\n        </nav>\n        <nav className=\"level is-mobile\">\n          <div className=\"level-item has-text-centered\">\n            <div>\n              <p className=\"heading\">Users</p>\n              <p className=\"title\">{this.state.members.length}</p>\n            </div>\n          </div>\n          <div className=\"level-item has-text-centered\">\n            <div>\n              <p className=\"heading\">Voted</p>\n              <p className=\"title\">{this.getVotedMembers().length}</p>\n            </div>\n          </div>\n        </nav>\n\n        <div className=\"result has-text-centered\" style={{ fontSize: '10em' }}>\n          {result}\n        </div>        \n        \n        <button onClick={this.resetVotes} className=\"button is-fullwidth is-medium\">\n          Clear\n        </button>\n      </section>\n    );\n  }\n}\n\nexport default Counter;\n","import React, { Component } from \"react\";\nimport Main from \"./Main\";\nimport Voter from \"./Voter\";\nimport Counter from \"./Counter\";\n\nconst _ = require('lodash');\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = this.handleChange.bind(this);\n\n    this.state = {\n      role: '',\n      channelUuid: _.random(1000, 9999),\n    };\n  }\n\n  handleChange(state) {\n    this.setState(state);\n  }\n\n  render() {\n    let container;\n\n    switch(this.state.role) {\n      case 'voter':\n        container = <Voter channelUuid={this.state.channelUuid} />\n        break;\n      case 'counter':\n        container = <Counter channelUuid={this.state.channelUuid} />\n        break;\n      default:\n        container = <Main handleChange={this.handleChange}/>\n    }\n\n    return (\n      <section className=\"hero is-fullheight\">\n        <div className=\"hero-body\">\n          <div className=\"container has-text-centered\">\n            { container }\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nrequire('./ably');\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","import { Realtime } from 'ably/browser/static/ably-commonjs.js';\n\nconst ably = new Realtime({key: 'JCmENQ.ynTpMA:YFVOVy1naePCjG1r', clientId: 'thc'});\n\nexport default ably;\n\n"],"sourceRoot":""}